name: Build and Test Odrpack_jll on Linux

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  
permissions:
  actions: write
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Set up Julia 1.7 for BinaryBuilder
      - uses: julia-actions/setup-julia@v2
        with:
          version: "1.7"
          arch: x64

      - uses: julia-actions/cache@v2

      - name: Build Odrpack_jll artifact
        run: |
          PACKAGE=Odrpack_jll
          PLATFORM=x86_64-linux-gnu
          julia --color=yes -e 'using Pkg; Pkg.add("BinaryBuilder")'
          julia --color=yes .github/julia/build_tarballs.jl --verbose --deploy=local
          file=/home/runner/.julia/dev/${PACKAGE}/Artifacts.toml
          sha1=$(grep '^git-tree-sha1' "$file" | cut -d '"' -f2)
          echo "ARTIFACT_SHA=${sha1}" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: /home/runner/.julia/artifacts/${{ env.ARTIFACT_SHA }}

      # Set up newer Julia for testing
      - uses: julia-actions/setup-julia@v2
        with:
          version: "1"
          arch: x64

      - uses: julia-actions/cache@v2

      - uses: julia-actions/julia-buildpkg@v1

      - uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: override

      - name: Override Odrpack_jll artifact path
        shell: julia --color=yes --project=. {0}
        run: |
          import Odrpack_jll
          artifact_dir = Odrpack_jll.artifact_dir
          sha = last(splitpath(artifact_dir))
          dir = escape_string(joinpath(ENV["GITHUB_WORKSPACE"], "override"))
          content = "$sha = \"$(dir)\"\n"
          write(replace(artifact_dir, sha => "Overrides.toml"), content)

      - uses: julia-actions/julia-runtest@v1
